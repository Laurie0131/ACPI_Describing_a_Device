{"metadata":{"generator":"Captivate","generatorVersion":"10.0.0","schemaVersion":"","author":"","title":"","description":"project description","email":"","website":"","tags":"","thumbnail":"","source":"assets","durationInFrames":39411,"frameRate":30,"totalSlides":41,"width":1280,"height":720,"responsive":false,"scalable":false,"launchFile":"index.html"},"contentStructure":[{"id":"si74830","class":"TODO::Senthil","roles":{}},{"id":"si74838","class":"TODO::Senthil","roles":{}},{"id":"Text_Caption_564","class":"TODO::Senthil","instance":"Text_Caption_564","title":"ACPI Training: Describing a Device ","roles":{"textData":{}}},{"id":"Text_Caption_909","class":"TODO::Senthil","instance":"Text_Caption_909","title":"Use buttons below to move between slides and control the audio. ","roles":{"textData":{}}},{"id":"Click_Box_56","class":"TODO::Senthil","instance":"Click_Box_56","roles":{"click":{"subtype":"button"}}},{"id":"Button_676","class":"TODO::Senthil","instance":"Button_676","roles":{"click":{"subtype":"button"}}},{"id":"Slide17873","class":"Normal Slide","instance":"Title slide","thumbnail":"","children":["si74830","si74838","Text_Caption_564","Text_Caption_909","Click_Box_56","Button_676"],"roles":{"slide":{"durationInFrames":291},"navigation":{"navid":"Slide17873"}}},{"id":"si150688","class":"TODO::Senthil","roles":{}},{"id":"si150690","class":"TODO::Senthil","roles":{}},{"id":"Text_Caption_1149","class":"TODO::Senthil","instance":"Text_Caption_1149","title":"ACPI Training: Describing a Device ","roles":{"textData":{}}},{"id":"Text_Caption_1150","class":"TODO::Senthil","instance":"Text_Caption_1150","title":"Use buttons below to move between slides and control the audio. ","roles":{"textData":{}}},{"id":"Click_Box_112","class":"TODO::Senthil","instance":"Click_Box_112","roles":{"click":{"subtype":"button"}}},{"id":"Slide150687","class":"Normal Slide","instance":"Title slide","thumbnail":"","children":["si150688","si150690","Text_Caption_1149","Text_Caption_1150","Click_Box_112"],"roles":{"slide":{"durationInFrames":291},"navigation":{"navid":"Slide150687"}}},{"id":"si74803","class":"TODO::Senthil","roles":{}},{"id":"si111722","class":"TODO::Senthil","title":"$$cpInfoCurrentSlide$$ ","roles":{"textData":{}}},{"id":"Click_Box_96","class":"TODO::Senthil","instance":"Click_Box_96","roles":{"click":{"subtype":"button"}}},{"id":"Text_Caption_992","class":"TODO::Senthil","instance":"Text_Caption_992","title":"Overview Introduction to ASL Describing a Device Platform Power States Describing Processors Interrupt Routing Device Power States   ","roles":{"textData":{}}},{"id":"Green_underline_160","class":"TODO::Senthil","instance":"Green_underline_160","roles":{}},{"id":"About_This_Module_993","class":"TODO::Senthil","instance":"About_This_Module_993","title":"ACPI Training Outline   ","roles":{"textData":{}}},{"id":"Vertical_blue_line_161","class":"TODO::Senthil","instance":"Vertical_blue_line_161","roles":{}},{"id":"About_This_Module_text_994","class":"TODO::Senthil","instance":"About_This_Module_text_994","title":"This training module explains how to describe a computer hardware device using the ACPI Source Language (ASL). The ASL content is then converted by a compiler to ACPI Machine Language (AML) bytecode, which is stored as definition blocks in computer firmware. At computer runtime, the definition blocks are used to build the ACPI Namespace, which is used by the OS to perform control operations on computer hardware.   This tutorial is primarily intended for ACPI firmware developers. It may also be useful for: Operating system and device driver developers OEMs building hardware containing ACPI-compatible interfaces CPU and chipset vendors Peripheral vendors  Before starting this training, please download the latest ACPI Specification from the following link, and open it to chapter 6. https://uefi.org/sites/default/files/resources/ACPI_6_3_final_Jan30.pdf  Please allow about an hour to complete this training.   ","roles":{"textData":{}}},{"id":"Green_underline_162","class":"TODO::Senthil","instance":"Green_underline_162","roles":{}},{"id":"What_is_ACPI_995","class":"TODO::Senthil","instance":"What_is_ACPI_995","title":"Introduction  ","roles":{"textData":{}}},{"id":"Slide122516","class":"Normal Slide","instance":"Introduction","thumbnail":"","children":["si74803","si111722","Click_Box_96","Text_Caption_992","About_This_Module_993","About_This_Module_text_994","What_is_ACPI_995"],"roles":{"slide":{"durationInFrames":1611},"navigation":{"navid":"Slide122516"}}},{"id":"Green_underline_187","class":"TODO::Senthil","instance":"Green_underline_187","roles":{}},{"id":"What_is_ACPI_1099","class":"TODO::Senthil","instance":"What_is_ACPI_1099","title":"Describing a Device ","roles":{"textData":{}}},{"id":"Click_Box_103","class":"TODO::Senthil","instance":"Click_Box_103","roles":{"click":{"subtype":"button"}}},{"id":"Text_Caption_1106","class":"TODO::Senthil","instance":"Text_Caption_1106","title":"The previous Introduction to ASL training module provides an overview of the ACPI Source Language. This module builds on that information by showing how to use ASL to describe a device. A device is a type of object in the ACPI Namespace that maps to distinct entities to reference platform hardware components. Operating system power management (OSPM) uses the ASL Namespace as a map to these hardware components.   Two types of device object declarations are supported:  •\tFull Device object: completely describes a device that is not bus-enumerated, and contains an _HID (Hardware ID) object. •\tAugmented Device object: provides additional information about a device that is bus-enumerated (e.g. PCI or USB), and contains an _ADR (Address) object.   See the following pages for more information about these two device declaration types.     ","roles":{"textData":{}}},{"id":"Slide145072","class":"Normal Slide","instance":"Describing a Device","thumbnail":"","children":["si74803","si111722","What_is_ACPI_1099","Click_Box_103","Text_Caption_1106"],"roles":{"slide":{"durationInFrames":1578},"navigation":{"navid":"Slide145072"}}},{"id":"Green_underline_188","class":"TODO::Senthil","instance":"Green_underline_188","roles":{}},{"id":"What_is_ACPI_1107","class":"TODO::Senthil","instance":"What_is_ACPI_1107","title":"Full Device Objects ","roles":{"textData":{}}},{"id":"Click_Box_104","class":"TODO::Senthil","instance":"Click_Box_104","roles":{"click":{"subtype":"button"}}},{"id":"Text_Caption_1108","class":"TODO::Senthil","instance":"Text_Caption_1108","title":"A Full Device object describes a device that cannot be discovered by a bus enumerator (PCI, USB, etc.). This could be an I2C device (such as a touch sensor), an LPC/ISA device (such as a serial/COM port), or any other non-enumerable device that OSPM needs to locate and install an appropriate device driver for the component.  A Full Device object may also virtualize (provide an abstraction layer) for platform hardware components. For example, an embedded controller (EC) can support many functions: keyboard/mouse interfaces, lid switch, power button, temperature sensor, serial port, I2C host controller, etc. The ACPI specification provides a way to describe each of these functions independently, so functions within a single physical device are described as separate items within the ASL Namespace.  ","roles":{"textData":{}}},{"id":"Slide145150","class":"Normal Slide","instance":"Full Device Objects","thumbnail":"","children":["si74803","si111722","What_is_ACPI_1107","Click_Box_104","Text_Caption_1108"],"roles":{"slide":{"durationInFrames":1512},"navigation":{"navid":"Slide145150"}}},{"id":"Green_underline_201","class":"TODO::Senthil","instance":"Green_underline_201","roles":{}},{"id":"What_is_ACPI_1179","class":"TODO::Senthil","instance":"What_is_ACPI_1179","title":"Augmented Device Objects ","roles":{"textData":{}}},{"id":"Click_Box_115","class":"TODO::Senthil","instance":"Click_Box_115","roles":{"click":{"subtype":"button"}}},{"id":"Text_Caption_1180","class":"TODO::Senthil","instance":"Text_Caption_1180","title":"An Augmented Device object provides additional information for a device that is discoverable via an enumerable bus. (Enumerable buses include PCI, USB, SATA, I3C, HD-Audio, and Soundwire, among others.) The additional information may include properties of the device that cannot be determined by querying it.   An Augmented Device object can also provide properties of the system that affect the behavior of the device, such as GPIO connections, or Control Methods used to reset or power-manage the device. And it may provide system-specific information, such as the physical location and description of a connector (for example a USB port).  ","roles":{"textData":{}}},{"id":"Slide154136","class":"Normal Slide","instance":"Augmented Device Objects","thumbnail":"","children":["si74803","si111722","What_is_ACPI_1179","Click_Box_115","Text_Caption_1180"],"roles":{"slide":{"durationInFrames":1191},"navigation":{"navid":"Slide154136"}}},{"id":"Green_underline_112","class":"TODO::Senthil","instance":"Green_underline_112","roles":{}},{"id":"What_is_ACPI_858","class":"TODO::Senthil","instance":"What_is_ACPI_858","title":"Device Keyword ","roles":{"textData":{}}},{"id":"Click_Box_30","class":"TODO::Senthil","instance":"Click_Box_30","roles":{"click":{"subtype":"button"}}},{"id":"What_is_ACPI_text_1004","class":"TODO::Senthil","instance":"What_is_ACPI_text_1004","title":"Devices are defined in ASL using the Device keyword, using the format shown to the right:    ","roles":{"textData":{}}},{"id":"What_is_ACPI_text_1005","class":"TODO::Senthil","instance":"What_is_ACPI_text_1005","title":"DeviceName is the name of the device, encoded as an ASL NameSeg. Generally this is a four-character name, e.g. DEV0, but it can also be a full pathname (such as \\_SB.HOST.CTL0.DEV0).  ","roles":{"textData":{}}},{"id":"What_is_ACPI_text_1006","class":"TODO::Senthil","instance":"What_is_ACPI_text_1006","title":"TermList is a set of ACPI objects used to describe properties of the device that are not otherwise discoverable, or to provide callable functions used to configure or manage the device. Almost all of these objects can be implemented as a control method or function that returns an object of the specified type. ","roles":{"textData":{}}},{"id":"Text_Caption_1158","class":"TODO::Senthil","instance":"Text_Caption_1158","title":"Device(DeviceName){ \tTermList } ","roles":{"textData":{}}},{"id":"Slide85337","class":"Normal Slide","instance":"Device Keyword","thumbnail":"","children":["si74803","si111722","What_is_ACPI_858","Click_Box_30","What_is_ACPI_text_1004","What_is_ACPI_text_1005","What_is_ACPI_text_1006","Text_Caption_1158"],"roles":{"slide":{"durationInFrames":1002},"navigation":{"navid":"Slide85337"}}},{"id":"Green_underline_198","class":"TODO::Senthil","instance":"Green_underline_198","roles":{}},{"id":"Click_Box_113","class":"TODO::Senthil","instance":"Click_Box_113","roles":{"click":{"subtype":"button"}}},{"id":"What_is_ACPI_text_1152","class":"TODO::Senthil","instance":"What_is_ACPI_text_1152","title":"Device(DEV0){ // Device Name \t   \t// Identification Objects \tName (_HID, “ACPI0010”) \tName (_UID, 0) \tName (_DSD, Package ({ ... })) \tName (_STA, 0) { ... }  \t// Initialization Objects \tMethod (_INI, 0) { ... } \tMethod (_REG, 0) { ... } \tName (_DEP, 0) { ... }  \t// Configuration Objects \tName (_CRS, 0) { ... } \tName (_PRS, 0) { ... } \tMethod (_SRS, 1) { ... } \tMethod (_DIS, 0) { ... } \t \t// Runtime Operational Objects \tMethod (_PS0, 0) { ... } \tMethod (_PS3, 0) { ... } \tMethod (_DSM, 4) { ... } \t  } // End DEV0  ","roles":{"textData":{}}},{"id":"What_is_ACPI_text_1153","class":"TODO::Senthil","instance":"What_is_ACPI_text_1153","title":"The ASL example shown here describes a device named DEV0.  Click on the blue circles for more information.  ","roles":{"textData":{}}},{"id":"What_is_ACPI_1169","class":"TODO::Senthil","instance":"What_is_ACPI_1169","title":"Device Example ","roles":{"textData":{}}},{"id":"SmartShape_226","class":"TODO::Senthil","instance":"SmartShape_226","title":" ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"si154207","class":"TODO::Senthil","title":" ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"si154226","class":"TODO::Senthil","title":" ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"SmartShape_227","class":"TODO::Senthil","instance":"SmartShape_227","title":" ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"si154281","class":"TODO::Senthil","title":" ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"si154300","class":"TODO::Senthil","title":" ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"SmartShape_228","class":"TODO::Senthil","instance":"SmartShape_228","title":" ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"si154355","class":"TODO::Senthil","title":" ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"si154374","class":"TODO::Senthil","title":" ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"SmartShape_229","class":"TODO::Senthil","instance":"SmartShape_229","title":" ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"si154429","class":"TODO::Senthil","title":" ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"si154448","class":"TODO::Senthil","title":" ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"SmartShape_250","class":"TODO::Senthil","instance":"SmartShape_250","title":"Show All ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"si155980","class":"TODO::Senthil","title":"Show All ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"si155999","class":"TODO::Senthil","title":"Show All ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"Slide151947","class":"Normal Slide","instance":"Device Example","thumbnail":"","children":["si74803","si111722","Click_Box_113","What_is_ACPI_text_1152","What_is_ACPI_text_1153","What_is_ACPI_1169","SmartShape_226","si154207","si154226","SmartShape_227","si154281","si154300","SmartShape_228","si154355","si154374","SmartShape_229","si154429","si154448","SmartShape_250","si155980","si155999"],"roles":{"slide":{"durationInFrames":216},"navigation":{"navid":"Slide151947"}}},{"id":"Green_underline_202","class":"TODO::Senthil","instance":"Green_underline_202","roles":{}},{"id":"Click_Box_116","class":"TODO::Senthil","instance":"Click_Box_116","roles":{"click":{"subtype":"button"}}},{"id":"What_is_ACPI_text_1186","class":"TODO::Senthil","instance":"What_is_ACPI_text_1186","title":"Device(DEV0){ // Device Name \t   \t// Identification Objects \tName (_HID, “ACPI0010”) \tName (_UID, 0) \tName (_DSD, Package ({ ... })) \tName (_STA, 0) { ... }  \t// Initialization Objects \tMethod (_INI, 0) { ... } \tMethod (_REG, 0) { ... } \tName (_DEP, 0) { ... }  \t// Configuration Objects \tName (_CRS, 0) { ... } \tName (_PRS, 0) { ... } \tMethod (_SRS, 1) { ... } \tMethod (_DIS, 0) { ... } \t \t// Runtime Operational Objects \tMethod (_PS0, 0) { ... } \tMethod (_PS3, 0) { ... } \tMethod (_DSM, 4) { ... } \t  } // End DEV0  ","roles":{"textData":{}}},{"id":"What_is_ACPI_1188","class":"TODO::Senthil","instance":"What_is_ACPI_1188","title":"Device Example ","roles":{"textData":{}}},{"id":"SmartShape_230","class":"TODO::Senthil","instance":"SmartShape_230","title":" ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"si154600","class":"TODO::Senthil","title":" ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"si154611","class":"TODO::Senthil","title":" ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"Text_Caption_1193","class":"TODO::Senthil","instance":"Text_Caption_1193","title":"Identification objects are used to identify the device and find an appropriate device driver. ","roles":{"textData":{}}},{"id":"SmartShape_255","class":"TODO::Senthil","instance":"SmartShape_255","title":" ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"si156350","class":"TODO::Senthil","title":" ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"si156369","class":"TODO::Senthil","title":" ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"SmartShape_256","class":"TODO::Senthil","instance":"SmartShape_256","title":" ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"si156424","class":"TODO::Senthil","title":" ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"si156443","class":"TODO::Senthil","title":" ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"SmartShape_257","class":"TODO::Senthil","instance":"SmartShape_257","title":" ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"si156498","class":"TODO::Senthil","title":" ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"si156517","class":"TODO::Senthil","title":" ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"SmartShape_258","class":"TODO::Senthil","instance":"SmartShape_258","title":"Show All ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"si156572","class":"TODO::Senthil","title":"Show All ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"si156591","class":"TODO::Senthil","title":"Show All ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"What_is_ACPI_text_1245","class":"TODO::Senthil","instance":"What_is_ACPI_text_1245","title":"The ASL example shown here describes a device named DEV0.  Click on the blue circles for more information.  ","roles":{"textData":{}}},{"id":"Slide154767","class":"Normal Slide","instance":"Device Example 2","thumbnail":"","children":["si74803","si111722","Click_Box_116","What_is_ACPI_text_1186","What_is_ACPI_1188","SmartShape_230","si154600","si154611","Text_Caption_1193","SmartShape_255","si156350","si156369","SmartShape_256","si156424","si156443","SmartShape_257","si156498","si156517","SmartShape_258","si156572","si156591","What_is_ACPI_text_1245"],"roles":{"slide":{"durationInFrames":165},"navigation":{"navid":"Slide154767"}}},{"id":"Green_underline_203","class":"TODO::Senthil","instance":"Green_underline_203","roles":{}},{"id":"Click_Box_117","class":"TODO::Senthil","instance":"Click_Box_117","roles":{"click":{"subtype":"button"}}},{"id":"What_is_ACPI_text_1194","class":"TODO::Senthil","instance":"What_is_ACPI_text_1194","title":"Device(DEV0){ // Device Name \t   \t// Identification Objects \tName (_HID, “ACPI0010”) \tName (_UID, 0) \tName (_DSD, Package ({ ... })) \tName (_STA, 0) { ... }  \t// Initialization Objects \tMethod (_INI, 0) { ... } \tMethod (_REG, 0) { ... } \tName (_DEP, 0) { ... }  \t// Configuration Objects \tName (_CRS, 0) { ... } \tName (_PRS, 0) { ... } \tMethod (_SRS, 1) { ... } \tMethod (_DIS, 0) { ... } \t \t// Runtime Operational Objects \tMethod (_PS0, 0) { ... } \tMethod (_PS3, 0) { ... } \tMethod (_DSM, 4) { ... } \t  } // End DEV0  ","roles":{"textData":{}}},{"id":"What_is_ACPI_1196","class":"TODO::Senthil","instance":"What_is_ACPI_1196","title":"Device Example ","roles":{"textData":{}}},{"id":"SmartShape_235","class":"TODO::Senthil","instance":"SmartShape_235","title":" ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"si154929","class":"TODO::Senthil","title":" ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"si154940","class":"TODO::Senthil","title":" ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"Text_Caption_1197","class":"TODO::Senthil","instance":"Text_Caption_1197","title":"Initialization objects are used to prepare a device for use.  ","roles":{"textData":{}}},{"id":"SmartShape_251","class":"TODO::Senthil","instance":"SmartShape_251","title":" ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"si156054","class":"TODO::Senthil","title":" ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"si156073","class":"TODO::Senthil","title":" ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"SmartShape_252","class":"TODO::Senthil","instance":"SmartShape_252","title":" ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"si156128","class":"TODO::Senthil","title":" ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"si156147","class":"TODO::Senthil","title":" ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"SmartShape_253","class":"TODO::Senthil","instance":"SmartShape_253","title":" ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"si156202","class":"TODO::Senthil","title":" ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"si156221","class":"TODO::Senthil","title":" ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"SmartShape_254","class":"TODO::Senthil","instance":"SmartShape_254","title":"Show All ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"si156276","class":"TODO::Senthil","title":"Show All ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"si156295","class":"TODO::Senthil","title":"Show All ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"What_is_ACPI_text_1246","class":"TODO::Senthil","instance":"What_is_ACPI_text_1246","title":"The ASL example shown here describes a device named DEV0.  Click on the blue circles for more information.  ","roles":{"textData":{}}},{"id":"Slide155056","class":"Normal Slide","instance":"Device Example 3","thumbnail":"","children":["si74803","si111722","Click_Box_117","What_is_ACPI_text_1194","What_is_ACPI_1196","SmartShape_235","si154929","si154940","Text_Caption_1197","SmartShape_251","si156054","si156073","SmartShape_252","si156128","si156147","SmartShape_253","si156202","si156221","SmartShape_254","si156276","si156295","What_is_ACPI_text_1246"],"roles":{"slide":{"durationInFrames":135},"navigation":{"navid":"Slide155056"}}},{"id":"What_is_ACPI_text_1226","class":"TODO::Senthil","instance":"What_is_ACPI_text_1226","title":"Device(DEV0){ // Device Name \t   \t// Identification Objects \tName (_HID, “ACPI0010”) \tName (_UID, 0) \tName (_DSD, Package ({ ... })) \tName (_STA, 0) { ... }  \t// Initialization Objects \tMethod (_INI, 0) { ... } \tMethod (_REG, 0) { ... } \tName (_DEP, 0) { ... }  \t// Configuration Objects \tName (_CRS, 0) { ... } \tName (_PRS, 0) { ... } \tMethod (_SRS, 1) { ... } \tMethod (_DIS, 0) { ... } \t \t// Runtime Operational Objects \tMethod (_PS0, 0) { ... } \tMethod (_PS3, 0) { ... } \tMethod (_DSM, 4) { ... } \t  } // End DEV0  ","roles":{"textData":{}}},{"id":"Green_underline_204","class":"TODO::Senthil","instance":"Green_underline_204","roles":{}},{"id":"Click_Box_118","class":"TODO::Senthil","instance":"Click_Box_118","roles":{"click":{"subtype":"button"}}},{"id":"What_is_ACPI_text_1202","class":"TODO::Senthil","instance":"What_is_ACPI_text_1202","title":"Device(DEV0){ // Device Name \t   \t// Identification Objects \tName (_HID, “ACPI0010”) \tName (_UID, 0) \tName (_DSD, Package ({ ... })) \tName (_STA, 0) { ... }  \t// Initialization Objects \tMethod (_INI, 0) { ... } \tMethod (_REG, 0) { ... } \tName (_DEP, 0) { ... }  \t// Configuration Objects \tName (_CRS, 0) { ... } \tName (_PRS, 0) { ... } \tMethod (_SRS, 1) { ... } \tMethod (_DIS, 0) { ... } \t \t// Runtime Operational Objects \tMethod (_PS0, 0) { ... } \tMethod (_PS3, 0) { ... } \tMethod (_DSM, 4) { ... } \t  } // End DEV0  ","roles":{"textData":{}}},{"id":"What_is_ACPI_1204","class":"TODO::Senthil","instance":"What_is_ACPI_1204","title":"Device Example ","roles":{"textData":{}}},{"id":"SmartShape_240","class":"TODO::Senthil","instance":"SmartShape_240","title":" ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"si155258","class":"TODO::Senthil","title":" ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"si155269","class":"TODO::Senthil","title":" ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"Text_Caption_1206","class":"TODO::Senthil","instance":"Text_Caption_1206","title":"Configuration objects are used to identify and configure resources for the device. ","roles":{"textData":{}}},{"id":"SmartShape_259","class":"TODO::Senthil","instance":"SmartShape_259","title":" ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"si156655","class":"TODO::Senthil","title":" ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"si156674","class":"TODO::Senthil","title":" ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"SmartShape_260","class":"TODO::Senthil","instance":"SmartShape_260","title":" ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"si156729","class":"TODO::Senthil","title":" ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"si156748","class":"TODO::Senthil","title":" ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"SmartShape_261","class":"TODO::Senthil","instance":"SmartShape_261","title":" ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"si156803","class":"TODO::Senthil","title":" ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"si156822","class":"TODO::Senthil","title":" ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"SmartShape_262","class":"TODO::Senthil","instance":"SmartShape_262","title":"Show All ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"si156877","class":"TODO::Senthil","title":"Show All ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"si156896","class":"TODO::Senthil","title":"Show All ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"What_is_ACPI_text_1247","class":"TODO::Senthil","instance":"What_is_ACPI_text_1247","title":"The ASL example shown here describes a device named DEV0.  Click on the blue circles for more information.  ","roles":{"textData":{}}},{"id":"Slide155345","class":"Normal Slide","instance":"Device Example 4","thumbnail":"","children":["si74803","si111722","What_is_ACPI_text_1226","Click_Box_118","What_is_ACPI_text_1202","What_is_ACPI_1204","SmartShape_240","si155258","si155269","Text_Caption_1206","SmartShape_259","si156655","si156674","SmartShape_260","si156729","si156748","SmartShape_261","si156803","si156822","SmartShape_262","si156877","si156896","What_is_ACPI_text_1247"],"roles":{"slide":{"durationInFrames":165},"navigation":{"navid":"Slide155345"}}},{"id":"Green_underline_205","class":"TODO::Senthil","instance":"Green_underline_205","roles":{}},{"id":"Click_Box_119","class":"TODO::Senthil","instance":"Click_Box_119","roles":{"click":{"subtype":"button"}}},{"id":"What_is_ACPI_text_1210","class":"TODO::Senthil","instance":"What_is_ACPI_text_1210","title":"Device(DEV0){ // Device Name \t   \t// Identification Objects \tName (_HID, “ACPI0010”) \tName (_UID, 0) \tName (_DSD, Package ({ ... })) \tName (_STA, 0) { ... }  \t// Initialization Objects \tMethod (_INI, 0) { ... } \tMethod (_REG, 0) { ... } \tName (_DEP, 0) { ... }  \t// Configuration Objects \tName (_CRS, 0) { ... } \tName (_PRS, 0) { ... } \tMethod (_SRS, 1) { ... } \tMethod (_DIS, 0) { ... } \t \t// Runtime Operational Objects \tMethod (_PS0, 0) { ... } \tMethod (_PS3, 0) { ... } \tMethod (_DSM, 4) { ... } \t  } // End DEV0  ","roles":{"textData":{}}},{"id":"What_is_ACPI_1212","class":"TODO::Senthil","instance":"What_is_ACPI_1212","title":"Device Example ","roles":{"textData":{}}},{"id":"SmartShape_245","class":"TODO::Senthil","instance":"SmartShape_245","title":" ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"si155587","class":"TODO::Senthil","title":" ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"si155598","class":"TODO::Senthil","title":" ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"Text_Caption_1215","class":"TODO::Senthil","instance":"Text_Caption_1215","title":"Runtime operational objects, or control methods, are used to act upon a device during normal OS runtime. ","roles":{"textData":{}}},{"id":"SmartShape_263","class":"TODO::Senthil","instance":"SmartShape_263","title":" ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"si156951","class":"TODO::Senthil","title":" ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"si156970","class":"TODO::Senthil","title":" ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"SmartShape_264","class":"TODO::Senthil","instance":"SmartShape_264","title":" ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"si157025","class":"TODO::Senthil","title":" ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"si157044","class":"TODO::Senthil","title":" ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"SmartShape_265","class":"TODO::Senthil","instance":"SmartShape_265","title":" ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"si157099","class":"TODO::Senthil","title":" ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"si157118","class":"TODO::Senthil","title":" ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"SmartShape_266","class":"TODO::Senthil","instance":"SmartShape_266","title":"Show All ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"si157173","class":"TODO::Senthil","title":"Show All ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"si157192","class":"TODO::Senthil","title":"Show All ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"What_is_ACPI_text_1248","class":"TODO::Senthil","instance":"What_is_ACPI_text_1248","title":"The ASL example shown here describes a device named DEV0.  Click on the blue circles for more information.  ","roles":{"textData":{}}},{"id":"Slide155634","class":"Normal Slide","instance":"Device Example 5","thumbnail":"","children":["si74803","si111722","Click_Box_119","What_is_ACPI_text_1210","What_is_ACPI_1212","SmartShape_245","si155587","si155598","Text_Caption_1215","SmartShape_263","si156951","si156970","SmartShape_264","si157025","si157044","SmartShape_265","si157099","si157118","SmartShape_266","si157173","si157192","What_is_ACPI_text_1248"],"roles":{"slide":{"durationInFrames":222},"navigation":{"navid":"Slide155634"}}},{"id":"Green_underline_206","class":"TODO::Senthil","instance":"Green_underline_206","roles":{}},{"id":"Click_Box_120","class":"TODO::Senthil","instance":"Click_Box_120","roles":{"click":{"subtype":"button"}}},{"id":"What_is_ACPI_text_1218","class":"TODO::Senthil","instance":"What_is_ACPI_text_1218","title":"Device(DEV0){ // Device Name \t   \t// Identification Objects \tName (_HID, “ACPI0010”) \tName (_UID, 0) \tName (_DSD, Package ({ ... })) \tName (_STA, 0) { ... }  \t// Initialization Objects \tMethod (_INI, 0) { ... } \tMethod (_REG, 0) { ... } \tName (_DEP, 0) { ... }  \t// Configuration Objects \tName (_CRS, 0) { ... } \tName (_PRS, 0) { ... } \tMethod (_SRS, 1) { ... } \tMethod (_DIS, 0) { ... } \t \t// Runtime Operational Objects \tMethod (_PS0, 0) { ... } \tMethod (_PS3, 0) { ... } \tMethod (_DSM, 4) { ... } \t  } // End DEV0  ","roles":{"textData":{}}},{"id":"What_is_ACPI_1220","class":"TODO::Senthil","instance":"What_is_ACPI_1220","title":"Device Example ","roles":{"textData":{}}},{"id":"SmartShape_246","class":"TODO::Senthil","instance":"SmartShape_246","title":" ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"si155756","class":"TODO::Senthil","title":" ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"si155767","class":"TODO::Senthil","title":" ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"SmartShape_247","class":"TODO::Senthil","instance":"SmartShape_247","title":" ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"si155796","class":"TODO::Senthil","title":" ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"si155807","class":"TODO::Senthil","title":" ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"SmartShape_248","class":"TODO::Senthil","instance":"SmartShape_248","title":" ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"si155836","class":"TODO::Senthil","title":" ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"si155847","class":"TODO::Senthil","title":" ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"SmartShape_249","class":"TODO::Senthil","instance":"SmartShape_249","title":" ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"si155876","class":"TODO::Senthil","title":" ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"si155887","class":"TODO::Senthil","title":" ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"Text_Caption_1221","class":"TODO::Senthil","instance":"Text_Caption_1221","title":"Initialization objects are used to prepare a device for use.  ","roles":{"textData":{}}},{"id":"Text_Caption_1222","class":"TODO::Senthil","instance":"Text_Caption_1222","title":"Configuration objects are used to identify and configure resources for the device. ","roles":{"textData":{}}},{"id":"Text_Caption_1223","class":"TODO::Senthil","instance":"Text_Caption_1223","title":"Runtime operational objects, or control methods, are used to act upon a device during normal OS runtime. ","roles":{"textData":{}}},{"id":"Text_Caption_1224","class":"TODO::Senthil","instance":"Text_Caption_1224","title":"More information about each type of object is provided later in this module. ","roles":{"textData":{}}},{"id":"Text_Caption_1225","class":"TODO::Senthil","instance":"Text_Caption_1225","title":"Identification objects are used to identify the device and find an appropriate device driver. ","roles":{"textData":{}}},{"id":"What_is_ACPI_text_1249","class":"TODO::Senthil","instance":"What_is_ACPI_text_1249","title":"The ASL example shown here describes a device named DEV0.  Click on the blue circles for more information.  ","roles":{"textData":{}}},{"id":"Slide155923","class":"Normal Slide","instance":"Device Example 6","thumbnail":"","children":["si74803","si111722","Click_Box_120","What_is_ACPI_text_1218","What_is_ACPI_1220","SmartShape_246","si155756","si155767","SmartShape_247","si155796","si155807","SmartShape_248","si155836","si155847","SmartShape_249","si155876","si155887","Text_Caption_1221","Text_Caption_1222","Text_Caption_1223","Text_Caption_1224","Text_Caption_1225","What_is_ACPI_text_1249"],"roles":{"slide":{"durationInFrames":150},"navigation":{"navid":"Slide155923"}}},{"id":"Green_underline_170","class":"TODO::Senthil","instance":"Green_underline_170","roles":{}},{"id":"Benefits_of_ACPI_1029","class":"TODO::Senthil","instance":"Benefits_of_ACPI_1029","title":"Identification Objects ","roles":{"textData":{}}},{"id":"Text_Caption_1030","class":"TODO::Senthil","instance":"Text_Caption_1030","title":"A full device object (_HID) is used to define a device that cannot be discovered by an architectural bus enumeration algorithm, like PCI or USB.  Click on the buttons shown below for more details.  ","roles":{"textData":{}}},{"id":"SmartShape_171","class":"TODO::Senthil","instance":"SmartShape_171","title":"_HID (Hardware ID) - Required ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"si136580","class":"TODO::Senthil","title":"_HID (Hardware ID) - Required ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"si136591","class":"TODO::Senthil","title":"_HID (Hardware ID) - Required ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"SmartShape_172","class":"TODO::Senthil","instance":"SmartShape_172","title":"_CID (Compatible ID) - Optional ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"si136620","class":"TODO::Senthil","title":"_CID (Compatible ID) - Optional ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"si136631","class":"TODO::Senthil","title":"_CID (Compatible ID) - Optional ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"SmartShape_173","class":"TODO::Senthil","instance":"SmartShape_173","title":"_UID (Unique ID) - may be required ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"si136660","class":"TODO::Senthil","title":"_UID (Unique ID) - may be required ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"si136671","class":"TODO::Senthil","title":"_UID (Unique ID) - may be required ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"SmartShape_174","class":"TODO::Senthil","instance":"SmartShape_174","title":"_CLS (Class Code) ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"si136700","class":"TODO::Senthil","title":"_CLS (Class Code) ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"si136711","class":"TODO::Senthil","title":"_CLS (Class Code) ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"SmartShape_212","class":"TODO::Senthil","instance":"SmartShape_212","title":"Show All ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"si146408","class":"TODO::Senthil","title":"Show All ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"si146427","class":"TODO::Senthil","title":"Show All ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"Slide136767","class":"Normal Slide","instance":"Identification Objects","thumbnail":"","children":["si74803","si111722","Benefits_of_ACPI_1029","Text_Caption_1030","SmartShape_171","si136580","si136591","SmartShape_172","si136620","si136631","SmartShape_173","si136660","si136671","SmartShape_174","si136700","si136711","SmartShape_212","si146408","si146427"],"roles":{"slide":{"durationInFrames":405},"navigation":{"navid":"Slide136767"}}},{"id":"Green_underline_175","class":"TODO::Senthil","instance":"Green_underline_175","roles":{}},{"id":"Benefits_of_ACPI_1044","class":"TODO::Senthil","instance":"Benefits_of_ACPI_1044","title":"Identification Objects ","roles":{"textData":{}}},{"id":"SmartShape_196","class":"TODO::Senthil","instance":"SmartShape_196","title":"_HID (Hardware ID) - Required ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"SmartShape_197","class":"TODO::Senthil","instance":"SmartShape_197","title":"_CID (Compatible ID) - Optional ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"si138043","class":"TODO::Senthil","title":"_CID (Compatible ID) - Optional ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"si138062","class":"TODO::Senthil","title":"_CID (Compatible ID) - Optional ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"SmartShape_198","class":"TODO::Senthil","instance":"SmartShape_198","title":"_UID (Unique ID) - may be required ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"si138117","class":"TODO::Senthil","title":"_UID (Unique ID) - may be required ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"si138136","class":"TODO::Senthil","title":"_UID (Unique ID) - may be required ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"SmartShape_199","class":"TODO::Senthil","instance":"SmartShape_199","title":"_CLS (Class Code) ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"si138191","class":"TODO::Senthil","title":"_CLS (Class Code) ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"si138210","class":"TODO::Senthil","title":"_CLS (Class Code) ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"Text_Caption_1046","class":"TODO::Senthil","instance":"Text_Caption_1046","title":"A full device descriptor must contain a Hardware ID (_HID) object, which is used by OSPM to match the device with an appropriate type of device driver. ","roles":{"textData":{}}},{"id":"SmartShape_221","class":"TODO::Senthil","instance":"SmartShape_221","title":"Show All ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"si147007","class":"TODO::Senthil","title":"Show All ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"si147026","class":"TODO::Senthil","title":"Show All ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"Text_Caption_1237","class":"TODO::Senthil","instance":"Text_Caption_1237","title":"A full device object (_HID) is used to define a device that cannot be discovered by an architectural bus enumeration algorithm, like PCI or USB.  Click on the buttons shown below for more details.  ","roles":{"textData":{}}},{"id":"Slide137036","class":"Normal Slide","instance":"Identification Objects 2","thumbnail":"","children":["si74803","si111722","Benefits_of_ACPI_1044","SmartShape_196","SmartShape_197","si138043","si138062","SmartShape_198","si138117","si138136","SmartShape_199","si138191","si138210","Text_Caption_1046","SmartShape_221","si147007","si147026","Text_Caption_1237"],"roles":{"slide":{"durationInFrames":276},"navigation":{"navid":"Slide137036"}}},{"id":"Green_underline_176","class":"TODO::Senthil","instance":"Green_underline_176","roles":{}},{"id":"Benefits_of_ACPI_1047","class":"TODO::Senthil","instance":"Benefits_of_ACPI_1047","title":"Identification Objects ","roles":{"textData":{}}},{"id":"SmartShape_200","class":"TODO::Senthil","instance":"SmartShape_200","title":"_HID (Hardware ID) - Required ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"si138298","class":"TODO::Senthil","title":"_HID (Hardware ID) - Required ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"si138317","class":"TODO::Senthil","title":"_HID (Hardware ID) - Required ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"SmartShape_201","class":"TODO::Senthil","instance":"SmartShape_201","title":"_CID (Compatible ID) - Optional ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"SmartShape_202","class":"TODO::Senthil","instance":"SmartShape_202","title":"_UID (Unique ID) - may be required ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"si138446","class":"TODO::Senthil","title":"_UID (Unique ID) - may be required ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"si138465","class":"TODO::Senthil","title":"_UID (Unique ID) - may be required ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"SmartShape_203","class":"TODO::Senthil","instance":"SmartShape_203","title":"_CLS (Class Code) ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"si138520","class":"TODO::Senthil","title":"_CLS (Class Code) ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"si138539","class":"TODO::Senthil","title":"_CLS (Class Code) ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"Text_Caption_1057","class":"TODO::Senthil","instance":"Text_Caption_1057","title":"An optional Compatible ID (_CID) object may also be provided to describe compatibility with other device drivers. For example, a serial port (UART) may be 16550A-compatible, but support vendor-specific capabilities that exceed 16550A features. An_HID object would return the vendor-specific hardware ID, which is used to match the preferred driver for the device. A _CID object would return the 16550A-compatible hardware ID (PNP0501). ","roles":{"textData":{}}},{"id":"SmartShape_222","class":"TODO::Senthil","instance":"SmartShape_222","title":"Show All ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"si147081","class":"TODO::Senthil","title":"Show All ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"si147100","class":"TODO::Senthil","title":"Show All ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"Text_Caption_1238","class":"TODO::Senthil","instance":"Text_Caption_1238","title":"A full device object (_HID) is used to define a device that cannot be discovered by an architectural bus enumeration algorithm, like PCI or USB.  Click on the buttons shown below for more details.  ","roles":{"textData":{}}},{"id":"Slide137305","class":"Normal Slide","instance":"Identification Objects 3","thumbnail":"","children":["si74803","si111722","Benefits_of_ACPI_1047","SmartShape_200","si138298","si138317","SmartShape_201","SmartShape_202","si138446","si138465","SmartShape_203","si138520","si138539","Text_Caption_1057","SmartShape_222","si147081","si147100","Text_Caption_1238"],"roles":{"slide":{"durationInFrames":1023},"navigation":{"navid":"Slide137305"}}},{"id":"Green_underline_177","class":"TODO::Senthil","instance":"Green_underline_177","roles":{}},{"id":"Benefits_of_ACPI_1050","class":"TODO::Senthil","instance":"Benefits_of_ACPI_1050","title":"Identification Objects ","roles":{"textData":{}}},{"id":"SmartShape_204","class":"TODO::Senthil","instance":"SmartShape_204","title":"_HID (Hardware ID) - Required ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"si138627","class":"TODO::Senthil","title":"_HID (Hardware ID) - Required ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"si138646","class":"TODO::Senthil","title":"_HID (Hardware ID) - Required ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"SmartShape_205","class":"TODO::Senthil","instance":"SmartShape_205","title":"_CID (Compatible ID) - Optional ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"si138701","class":"TODO::Senthil","title":"_CID (Compatible ID) - Optional ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"si138720","class":"TODO::Senthil","title":"_CID (Compatible ID) - Optional ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"SmartShape_206","class":"TODO::Senthil","instance":"SmartShape_206","title":"_UID (Unique ID) - may be required ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"SmartShape_207","class":"TODO::Senthil","instance":"SmartShape_207","title":"_CLS (Class Code) ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"si138849","class":"TODO::Senthil","title":"_CLS (Class Code) ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"si138868","class":"TODO::Senthil","title":"_CLS (Class Code) ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"Text_Caption_1058","class":"TODO::Senthil","instance":"Text_Caption_1058","title":"If multiple devices of the same type (haivng the same _HID value) are exposed within a platform, a Unique ID (_UID) object must be provided to differentiate between the devices. ","roles":{"textData":{}}},{"id":"SmartShape_223","class":"TODO::Senthil","instance":"SmartShape_223","title":"Show All ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"si147155","class":"TODO::Senthil","title":"Show All ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"si147174","class":"TODO::Senthil","title":"Show All ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"Text_Caption_1239","class":"TODO::Senthil","instance":"Text_Caption_1239","title":"A full device object (_HID) is used to define a device that cannot be discovered by an architectural bus enumeration algorithm, like PCI or USB.  Click on the buttons shown below for more details.  ","roles":{"textData":{}}},{"id":"Slide137574","class":"Normal Slide","instance":"Identification Objects 4","thumbnail":"","children":["si74803","si111722","Benefits_of_ACPI_1050","SmartShape_204","si138627","si138646","SmartShape_205","si138701","si138720","SmartShape_206","SmartShape_207","si138849","si138868","Text_Caption_1058","SmartShape_223","si147155","si147174","Text_Caption_1239"],"roles":{"slide":{"durationInFrames":339},"navigation":{"navid":"Slide137574"}}},{"id":"Green_underline_178","class":"TODO::Senthil","instance":"Green_underline_178","roles":{}},{"id":"Benefits_of_ACPI_1053","class":"TODO::Senthil","instance":"Benefits_of_ACPI_1053","title":"Identification Objects ","roles":{"textData":{}}},{"id":"SmartShape_208","class":"TODO::Senthil","instance":"SmartShape_208","title":"_HID (Hardware ID) - Required ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"si138956","class":"TODO::Senthil","title":"_HID (Hardware ID) - Required ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"si138975","class":"TODO::Senthil","title":"_HID (Hardware ID) - Required ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"SmartShape_209","class":"TODO::Senthil","instance":"SmartShape_209","title":"_CID (Compatible ID) - Optional ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"si139030","class":"TODO::Senthil","title":"_CID (Compatible ID) - Optional ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"si139049","class":"TODO::Senthil","title":"_CID (Compatible ID) - Optional ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"SmartShape_210","class":"TODO::Senthil","instance":"SmartShape_210","title":"_UID (Unique ID) - may be required ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"si139104","class":"TODO::Senthil","title":"_UID (Unique ID) - may be required ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"si139123","class":"TODO::Senthil","title":"_UID (Unique ID) - may be required ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"SmartShape_211","class":"TODO::Senthil","instance":"SmartShape_211","title":"_CLS (Class Code) ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"Text_Caption_1059","class":"TODO::Senthil","instance":"Text_Caption_1059","title":"If a device is compatible with a PCI Class definition, a Class Code (_CLS) object is used to convey the Class, SubClass, and Programming Interface which OSPM can use to find a compatible driver. See the PCI Code and ID Specification available from the PCI SIG (http://www.pcisig.com) for a list of defined classes. ","roles":{"textData":{}}},{"id":"SmartShape_224","class":"TODO::Senthil","instance":"SmartShape_224","title":"Show All ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"si147229","class":"TODO::Senthil","title":"Show All ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"si147248","class":"TODO::Senthil","title":"Show All ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"Text_Caption_1240","class":"TODO::Senthil","instance":"Text_Caption_1240","title":"A full device object (_HID) is used to define a device that cannot be discovered by an architectural bus enumeration algorithm, like PCI or USB.  Click on the buttons shown below for more details.  ","roles":{"textData":{}}},{"id":"Slide137843","class":"Normal Slide","instance":"Identification Objects 5","thumbnail":"","children":["si74803","si111722","Benefits_of_ACPI_1053","SmartShape_208","si138956","si138975","SmartShape_209","si139030","si139049","SmartShape_210","si139104","si139123","SmartShape_211","Text_Caption_1059","SmartShape_224","si147229","si147248","Text_Caption_1240"],"roles":{"slide":{"durationInFrames":630},"navigation":{"navid":"Slide137843"}}},{"id":"Green_underline_193","class":"TODO::Senthil","instance":"Green_underline_193","roles":{}},{"id":"Benefits_of_ACPI_1125","class":"TODO::Senthil","instance":"Benefits_of_ACPI_1125","title":"Identification Objects ","roles":{"textData":{}}},{"id":"SmartShape_213","class":"TODO::Senthil","instance":"SmartShape_213","title":"_HID (Hardware ID) - Required ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"si146503","class":"TODO::Senthil","title":"_HID (Hardware ID) - Required ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"si146514","class":"TODO::Senthil","title":"_HID (Hardware ID) - Required ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"SmartShape_214","class":"TODO::Senthil","instance":"SmartShape_214","title":"_CID (Compatible ID) - Optional ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"si146543","class":"TODO::Senthil","title":"_CID (Compatible ID) - Optional ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"si146554","class":"TODO::Senthil","title":"_CID (Compatible ID) - Optional ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"SmartShape_215","class":"TODO::Senthil","instance":"SmartShape_215","title":"_UID (Unique ID) - may be required ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"si146583","class":"TODO::Senthil","title":"_UID (Unique ID) - may be required ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"si146594","class":"TODO::Senthil","title":"_UID (Unique ID) - may be required ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"SmartShape_216","class":"TODO::Senthil","instance":"SmartShape_216","title":"_CLS (Class Code) ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"si146623","class":"TODO::Senthil","title":"_CLS (Class Code) ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"si146634","class":"TODO::Senthil","title":"_CLS (Class Code) ","roles":{"click":{"subtype":"button"},"textData":{}}},{"id":"Text_Caption_1127","class":"TODO::Senthil","instance":"Text_Caption_1127","title":"A device descriptor must contain a Hardware ID (_HID) object, which is used by OSPM to match the device with an appropriate type of device driver. ","roles":{"textData":{}}},{"id":"Text_Caption_1128","class":"TODO::Senthil","instance":"Text_Caption_1128","title":"An optional Compatible ID (_CID) object may also be provided to describe compatibility with other device drivers. For example, a serial port (UART) may be 16550A-compatible, but support vendor-specific capabilities that exceed 16550A features. An_HID object would return the vendor-specific hardware ID, which is used to match the preferred driver for the device. A _CID object would return the 16550-compatible hardware ID (PNP0501). ","roles":{"textData":{}}},{"id":"Text_Caption_1129","class":"TODO::Senthil","instance":"Text_Caption_1129","title":"If multiple devices of the same type (same _HID value) are exposed within a platform, a Unique ID (_UID) object must be provided to differentiate between the devices. ","roles":{"textData":{}}},{"id":"Text_Caption_1241","class":"TODO::Senthil","instance":"Text_Caption_1241","title":"A full device object (_HID) is used to define a device that cannot be discovered by an architectural bus enumeration algorithm, like PCI or USB.  Click on the buttons shown below for more details.  ","roles":{"textData":{}}},{"id":"Text_Caption_1250","class":"TODO::Senthil","instance":"Text_Caption_1250","title":"If a device is compatible with a PCI Class definition, a Class Code (_CLS) object is used to convey the Class, SubClass, and Programming Interface which OSPM can use to find a compatible driver. See the PCI Code and ID Specification available from the PCI SIG (http://www.pcisig.com) for a list of defined classes. ","roles":{"textData":{}}},{"id":"Slide146690","class":"Normal Slide","instance":"Identification Objects 6","thumbnail":"","children":["si74803","si111722","Benefits_of_ACPI_1125","SmartShape_213","si146503","si146514","SmartShape_214","si146543","si146554","SmartShape_215","si146583","si146594","SmartShape_216","si146623","si146634","Text_Caption_1127","Text_Caption_1128","Text_Caption_1129","Text_Caption_1241","Text_Caption_1250"],"roles":{"slide":{"durationInFrames":327},"navigation":{"navid":"Slide146690"}}},{"id":"Green_underline_185","class":"TODO::Senthil","instance":"Green_underline_185","roles":{}},{"id":"What_is_ACPI_1086","class":"TODO::Senthil","instance":"What_is_ACPI_1086","title":"Status (_STA)  ","roles":{"textData":{}}},{"id":"Click_Box_102","class":"TODO::Senthil","instance":"Click_Box_102","roles":{"click":{"subtype":"button"}}},{"id":"Text_Caption_1087","class":"TODO::Senthil","instance":"Text_Caption_1087","title":"Status (_STA) is used to describe whether a device is present and functional. _STA evaluates to an integer return value using the following bit definitions, and is the first object to be evaluated for a device.  ","roles":{"textData":{}}},{"id":"Text_Caption_1088","class":"TODO::Senthil","instance":"Text_Caption_1088","title":"In most circumstances, _STA will return a value of 0x0F for a device that is functional. If an _STA value is not available, OSPM expects and behaves as though the device is present and functional.   If _STA returns a value indicating that the Device is not present and functional, OSPM will not process the device object further and will not attempt to load a driver for the device. ","roles":{"textData":{}}},{"id":"Text_Caption_1242","class":"TODO::Senthil","instance":"Text_Caption_1242","title":"_STA return value:   Bit [0] - Set if the device is present.  Bit [1] - Set if the device is enabled and decoding its resources.  Bit [2] - Set if the device should be shown in the UI.  Bit [3] - Set if the device is functioning properly, and cleared if the device fails its diagnostic test. Bit [4]  - Set if a battery is present. This is only applicable for a control method battery device (PNP0C0A). Bits [31:5] - Reserved (must be cleared).  ","roles":{"textData":{}}},{"id":"Slide144830","class":"Normal Slide","instance":"Status (_STA)","thumbnail":"","children":["si74803","si111722","What_is_ACPI_1086","Click_Box_102","Text_Caption_1087","Text_Caption_1088","Text_Caption_1242"],"roles":{"slide":{"durationInFrames":1863},"navigation":{"navid":"Slide144830"}}},{"id":"What_is_ACPI_text_916","class":"TODO::Senthil","instance":"What_is_ACPI_text_916","title":"If a device exposes hardware resources to be consumed by the device driver, the device object must expose a Current Resource Setting (_CRS) object.   For example, a 16550A-compatible UART device should expose an IO or MMIO range for the UART registers, and an interrupt resource:  ","roles":{"textData":{}}},{"id":"Green_underline_138","class":"TODO::Senthil","instance":"Green_underline_138","roles":{}},{"id":"What_is_ACPI_917","class":"TODO::Senthil","instance":"What_is_ACPI_917","title":"Hardware Resources ","roles":{"textData":{}}},{"id":"Click_Box_75","class":"TODO::Senthil","instance":"Click_Box_75","roles":{"click":{"subtype":"button"}}},{"id":"What_is_ACPI_text_997","class":"TODO::Senthil","instance":"What_is_ACPI_text_997","title":"Name(_CRS, ResourceTemplate(){ \tIO(Decode16, 0x3F8, 0x3F8, 1, 8, IO0),   IRQ(Level, ActiveLow, Exclusive, IRQ0){4} } ","roles":{"textData":{}}},{"id":"What_is_ACPI_text_998","class":"TODO::Senthil","instance":"What_is_ACPI_text_998","title":"In this example, the IO Descriptor macro is used to describe a range of I/O ports beginning at I/O port 0x3F8, ending at 0x3FF, addressable at byte granularity, and a range of 8 bytes. The IRQ Descriptor macro is used to describe a single, level-sensitive, active-low, non-shared interrupt at interrupt vector 4.     ","roles":{"textData":{}}},{"id":"Slide109240","class":"Normal Slide","instance":"Hardware Resources","thumbnail":"","children":["si74803","si111722","What_is_ACPI_text_916","What_is_ACPI_917","Click_Box_75","What_is_ACPI_text_997","What_is_ACPI_text_998"],"roles":{"slide":{"durationInFrames":1254},"navigation":{"navid":"Slide109240"}}},{"id":"What_is_ACPI_text_920","class":"TODO::Senthil","instance":"What_is_ACPI_text_920","title":"The Initialization (_INI) control method, if present, is invoked by OSPM before any other object (other than _STA) within the device scope is evaluated, and before the driver for the Device is started.   A Region (_REG) control method is invoked by OSPM when an Operation Region handler becomes available during runtime, or to inform the platform that the handler is no longer available. Note that _REG is not expected to be evaluated to declare support for memory/MMIO, I/O, or PCI config space operation region handlers- handlers for those address spaces must always be available.  A Device Dependency (_DEP) object is an optional object which is used to enforce driver load ordering. _DEP evaluates to a package of Device object names/namepaths. OSPM will ensure that drivers for Device objects in the _DEP list are started prior to the initialization (_INI) of the current Device.  ","roles":{"textData":{}}},{"id":"Click_Box_77","class":"TODO::Senthil","instance":"Click_Box_77","roles":{"click":{"subtype":"button"}}},{"id":"Green_underline_186","class":"TODO::Senthil","instance":"Green_underline_186","roles":{}},{"id":"What_is_ACPI_1095","class":"TODO::Senthil","instance":"What_is_ACPI_1095","title":"Device Initialization  ","roles":{"textData":{}}},{"id":"Slide109344","class":"Normal Slide","instance":"Device Initialization","thumbnail":"","children":["si74803","si111722","What_is_ACPI_text_920","Click_Box_77","What_is_ACPI_1095"],"roles":{"slide":{"durationInFrames":1641},"navigation":{"navid":"Slide109344"}}},{"id":"What_is_ACPI_text_963","class":"TODO::Senthil","instance":"What_is_ACPI_text_963","title":"ASL provides an easy way to create several types of macros as listed below, which are used to generate resource descriptor data types (see ACPI section 6.4). These resource descriptors are categorized as either Small Resource Data Types of two to eight bytes (section 6.4.2), or Large Resource Data Types of up to 64 KB (section 6.4.3). ","roles":{"textData":{}}},{"id":"Green_underline_154","class":"TODO::Senthil","instance":"Green_underline_154","roles":{}},{"id":"What_is_ACPI_964","class":"TODO::Senthil","instance":"What_is_ACPI_964","title":"Resource Descriptor Data Types ","roles":{"textData":{}}},{"id":"Click_Box_90","class":"TODO::Senthil","instance":"Click_Box_90","roles":{"click":{"subtype":"button"}}},{"id":"Text_Caption_965","class":"TODO::Senthil","instance":"Text_Caption_965","title":"Large Resource Items (up to 64KB):  24-bit Memory Range Descriptor Generic Register Descriptor Vendor-Defined Descriptor (Large) 32-bit Memory Range Descriptor 32-bit Fixed Memory Range Descriptor Address Space Resource Descriptors Word Address Space Descriptor Extended Interrupt Descriptor QWord Address Space Descriptor Extended Address Space Descriptor GPIO Connection Descriptor Pin Function Descriptor GenericSerialBus Connection Descriptor Pin Configuration Descriptor Pin Group Descriptor Pin Group Function Descriptor Pin Group Configuration Descriptor ","roles":{"textData":{}}},{"id":"Text_Caption_966","class":"TODO::Senthil","instance":"Text_Caption_966","title":"The full set of Resource Descriptor macros is in the ASL reference, section 19.2.8  of the ACPI specification.  ","roles":{"textData":{}}},{"id":"Text_Caption_996","class":"TODO::Senthil","instance":"Text_Caption_996","title":"Small resource items (2-8 bytes):  IRQ Format Descriptor DMA Format Descriptor I/O Port Descriptor Fixed Location I/O Port Descriptor Fixed DMA Descriptor Vendor Defined Descriptor (Small) ","roles":{"textData":{}}},{"id":"Slide111195","class":"Normal Slide","instance":"Resource Descriptor Data Types","thumbnail":"","children":["si74803","si111722","What_is_ACPI_text_963","What_is_ACPI_964","Click_Box_90","Text_Caption_965","Text_Caption_966","Text_Caption_996"],"roles":{"slide":{"durationInFrames":645},"navigation":{"navid":"Slide111195"}}},{"id":"Green_underline_144","class":"TODO::Senthil","instance":"Green_underline_144","roles":{}},{"id":"What_is_ACPI_929","class":"TODO::Senthil","instance":"What_is_ACPI_929","title":"IO Macro ","roles":{"textData":{}}},{"id":"Click_Box_81","class":"TODO::Senthil","instance":"Click_Box_81","roles":{"click":{"subtype":"button"}}},{"id":"Image_238","class":"TODO::Senthil","instance":"Image_238","roles":{}},{"id":"Text_Caption_939","class":"TODO::Senthil","instance":"Text_Caption_939","title":"Each ASL macro will produce one resource buffer. For example, the IO macro takes six arguments as shown here. The resulting buffer is in the format shown in the following table.   ","roles":{"textData":{}}},{"id":"Text_Caption_1160","class":"TODO::Senthil","instance":"Text_Caption_1160","title":"IO (      IODecode,      // IODecodeKeyword (_DEC)      MinAddress,    // WordConstExpr (_MIN)      MaxAddress,    // WordConstExpr (_MAX)      Alignment,     // ByteConstExpr (_ALN)      RangeLength,   // ByteConstExpr (_LEN)      DescriptorName // Nothing | NameString  ) ","roles":{"textData":{}}},{"id":"Slide109552","class":"Normal Slide","instance":"IO Macro","thumbnail":"","children":["si74803","si111722","What_is_ACPI_929","Click_Box_81","Image_238","Text_Caption_939","Text_Caption_1160"],"roles":{"slide":{"durationInFrames":354},"navigation":{"navid":"Slide109552"}}},{"id":"What_is_ACPI_text_953","class":"TODO::Senthil","instance":"What_is_ACPI_text_953","title":"The IRQNoFlags macro has only one argument, which is the DescriptorName:  IRQNoFlags (      DescriptorName    // Nothing | NameString  ) {ByteList}          // list of interrupts (0-15 bytes)   The IRQ macro takes 4 arguments:  IRQ ( InterruptType,  // InterruptTypeKeyword (_LL, _HE)      InterruptLevel,   // InterruptLevelKeyword (_LL, _HE)      ShareType,        // Nothing (Exclusive) | ShareTypeKeyword (_SHR)      DescriptorName    // Nothing | NameString  ) {ByteList}          // list of interrupts (0-15 bytes)   Both IRQ and IRQNoFlags macros provide a buffer in the format shown in the table here.    See the ACPI specification, sections 6.4 and 19.2.8, for details on other Resource Descriptors and macros. ","roles":{"textData":{}}},{"id":"Green_underline_152","class":"TODO::Senthil","instance":"Green_underline_152","roles":{}},{"id":"What_is_ACPI_954","class":"TODO::Senthil","instance":"What_is_ACPI_954","title":"Irq and IrqNoFlags Macros ","roles":{"textData":{}}},{"id":"Click_Box_87","class":"TODO::Senthil","instance":"Click_Box_87","roles":{"click":{"subtype":"button"}}},{"id":"Image_242","class":"TODO::Senthil","instance":"Image_242","roles":{}},{"id":"Slide110245","class":"Normal Slide","instance":"Irq and IrqNoFlags","thumbnail":"","children":["si74803","si111722","What_is_ACPI_text_953","What_is_ACPI_954","Click_Box_87","Image_242"],"roles":{"slide":{"durationInFrames":780},"navigation":{"navid":"Slide110245"}}},{"id":"Click_Box_108","class":"TODO::Senthil","instance":"Click_Box_108","roles":{"click":{"subtype":"button"}}},{"id":"Green_underline_194","class":"TODO::Senthil","instance":"Green_underline_194","roles":{}},{"id":"What_is_ACPI_1131","class":"TODO::Senthil","instance":"What_is_ACPI_1131","title":"Buffers and the ResourceTemplate ","roles":{"textData":{}}},{"id":"Text_Caption_1132","class":"TODO::Senthil","instance":"Text_Caption_1132","title":"Buffers are useful for encoding information about resources used by device drivers, such as IRQ, DMA, and I/O ports. Each of these resources has a particular format  - the example to the right describes an I/O resource named RES1.   When a driver needs information about the configuration of devices through ACPI, it calls the AML interpreter for a named object that can be assigned to a buffer similar to this example.   ","roles":{"textData":{}}},{"id":"Text_Caption_1133","class":"TODO::Senthil","instance":"Text_Caption_1133","title":"Programming buffers by hand can be lead to mistakes because the above notation lacks semantic meanings. If device resources need to be described, the ResourceTemplate macro should be used. By doing so, the buffer can be encoded as shown in the second example.   ","roles":{"textData":{}}},{"id":"Text_Caption_1134","class":"TODO::Senthil","instance":"Text_Caption_1134","title":"DefinitionBlock (\"\", \"DSDT\", 2, \"\", \"\", 0x0) {     Name (RES1, Buffer(){         0x47, 0x01, 0x62, 0x00, 0x62, 0x00, 0x00, 0x01,         0x47, 0x01, 0x66, 0x00, 0x66, 0x00, 0x00, 0x01,         0x79, 0x00     }) } ","roles":{"textData":{}}},{"id":"Text_Caption_1135","class":"TODO::Senthil","instance":"Text_Caption_1135","title":"DefinitionBlock (\"\", \"DSDT\", 2, \"\", \"\", 0x0) {     Name (RES2,          ResourceTemplate(){             IO(Decode16, 0x62, 0x62, 0, 1)             IO(Decode16, 0x66, 0x66, 0, 1)     })  }  ","roles":{"textData":{}}},{"id":"Slide147907","class":"Normal Slide","instance":"Buffers and the ResourceTemplate","thumbnail":"","children":["si74803","si111722","Click_Box_108","What_is_ACPI_1131","Text_Caption_1132","Text_Caption_1133","Text_Caption_1134","Text_Caption_1135"],"roles":{"slide":{"durationInFrames":1248},"navigation":{"navid":"Slide147907"}}},{"id":"Click_Box_109","class":"TODO::Senthil","instance":"Click_Box_109","roles":{"click":{"subtype":"button"}}},{"id":"Text_Caption_1137","class":"TODO::Senthil","instance":"Text_Caption_1137","title":"When compiled, the RES2 example from the previous slide will be translated  to look exactly like RES1. The translations for RES1 and RES2 are depicted in the image below. ","roles":{"textData":{}}},{"id":"Green_underline_207","class":"TODO::Senthil","instance":"Green_underline_207","roles":{}},{"id":"What_is_ACPI_1251","class":"TODO::Senthil","instance":"What_is_ACPI_1251","title":"Buffers and the ResourceTemplate ","roles":{"textData":{}}},{"id":"Image_248","class":"TODO::Senthil","instance":"Image_248","roles":{}},{"id":"Text_Caption_1252","class":"TODO::Senthil","instance":"Text_Caption_1252","title":"DefinitionBlock (\"\", \"DSDT\", 2, \"\", \"\", 0x0) {     Name (RES2,          ResourceTemplate(){             IO(Decode16, 0x62, 0x62, 0, 1)             IO(Decode16, 0x66, 0x66, 0, 1)     })  }  ","roles":{"textData":{}}},{"id":"Slide147965","class":"Normal Slide","instance":"Buffers and the ResourceTemplate 2","thumbnail":"","children":["si74803","si111722","Click_Box_109","Text_Caption_1137","What_is_ACPI_1251","Image_248","Text_Caption_1252"],"roles":{"slide":{"durationInFrames":330},"navigation":{"navid":"Slide147965"}}},{"id":"Click_Box_110","class":"TODO::Senthil","instance":"Click_Box_110","roles":{"click":{"subtype":"button"}}},{"id":"Text_Caption_1139","class":"TODO::Senthil","instance":"Text_Caption_1139","title":"In order to read from or write to elements of RES2, create bit fields that overlay a parameter and write to those bit fields. In the previous example, the second parameter of the first IO macro can be written as shown here.   Note that the NameSegs associated with ResourceTemplates are not added to the ACPI Namespace, and cannot be fetched by the operating system.    ","roles":{"textData":{}}},{"id":"Text_Caption_1140","class":"TODO::Senthil","instance":"Text_Caption_1140","title":"DefinitionBlock (\"\", \"DSDT\", 2, \"\", \"\", 0x0) {     Name (RES2,          ResourceTemplate(){             IO(Decode16, 0x62, 0x62, 0, 1, IOP1)             IO(Decode16, 0x66, 0x66, 0, 1, IOP2)     })      Method (WRRT, arg1)     {         /*          * According to the ACPI specification, the second field of the IO          * macro is 16 bits. Therefore, use CreateWordField to overlay a region          * that is 16 bits in length.          */         CreateWordField (RES2, \\IOP1._MIN, MINF)         MINF = 0x1234   // This will write 0x1234 to the second field in IOP1.     }   } ","roles":{"textData":{}}},{"id":"Green_underline_208","class":"TODO::Senthil","instance":"Green_underline_208","roles":{}},{"id":"What_is_ACPI_1253","class":"TODO::Senthil","instance":"What_is_ACPI_1253","title":"Buffers and the ResourceTemplate ","roles":{"textData":{}}},{"id":"Slide148021","class":"Normal Slide","instance":"Buffers and the ResourceTemplate 3","thumbnail":"","children":["si74803","si111722","Click_Box_110","Text_Caption_1139","Text_Caption_1140","What_is_ACPI_1253"],"roles":{"slide":{"durationInFrames":615},"navigation":{"navid":"Slide148021"}}},{"id":"What_is_ACPI_text_914","class":"TODO::Senthil","instance":"What_is_ACPI_text_914","title":"If the resources for a device are configurable, then two more objects are used to manage the configuration:  Possible Resource Settings (_PRS) and Set Resource Settings (_SRS)   _PRS lists a set of all possible configuration settings (collections).   _SRS is a control method that configures the hardware using settings passed in as arguments.  In the _PRS example shown here, four distinct settings are provided that map to the PC architectural definitions for COM1, COM2, COM3, and COM4. Each collection wrapped in a StartDependentFn block is one possible resource setting (_PRS) for the Device. OSPM may use this information to resolve resource conflicts amongst devices within the platform.   ","roles":{"textData":{}}},{"id":"Green_underline_137","class":"TODO::Senthil","instance":"Green_underline_137","roles":{}},{"id":"What_is_ACPI_915","class":"TODO::Senthil","instance":"What_is_ACPI_915","title":"_PRS and _SRS ","roles":{"textData":{}}},{"id":"Click_Box_74","class":"TODO::Senthil","instance":"Click_Box_74","roles":{"click":{"subtype":"button"}}},{"id":"Text_Caption_1155","class":"TODO::Senthil","instance":"Text_Caption_1155","title":"Name(_PRS, ResourceTemplate(){     StartDependentFn(0,2){             // COM1       IO(Decode16, 0x3F8, 0x3F8, 1, 8),       IRQNoFlags(){4}     },     StartDependentFn(0,2){             // COM2       IO(Decode16, 0x2F8, 0x2F8, 1, 8),       IRQNoFlags(){3}     },     StartDependentFn(0, 2){            // COM3       IO(Decode16, 0x3E8, 0x3E8, 1, 8),       IRQNoFlags(){4}     },     StartDependentFn(0, 2){            // COM4       IO(Decode16, 0x2E8, 0x2E8, 1, 8),       IRQNoFlags(){3}     },     EndDependentFn() }) ","roles":{"textData":{}}},{"id":"Slide109188","class":"Normal Slide","instance":"_PRS and _SRS","thumbnail":"","children":["si74803","si111722","What_is_ACPI_text_914","What_is_ACPI_915","Click_Box_74","Text_Caption_1155"],"roles":{"slide":{"durationInFrames":1368},"navigation":{"navid":"Slide109188"}}},{"id":"What_is_ACPI_text_967","class":"TODO::Senthil","instance":"What_is_ACPI_text_967","title":"Another way that possible resource settings can be provided is via a range of values. For an I/O-based UART device where mapping to COM1-4 is not necessary, I/O ports and interrupts can be described as shown in the example here.  In the example shown here, eight bytes of I/O are described, but the base address for the I/O registers can be anywhere in the range of 0x300 to 0x3F8, with a QWORD base address alignment, and the option to select either IRQ3 or IRQ4.   Additionally, the IRQNoFlags macro can be used in this case, since the interrupt is active high and edge-triggered. Lastly, since multiple static settings are not provided, the StartDependentFn and EndDependentFn macros are not needed. ","roles":{"textData":{}}},{"id":"Click_Box_91","class":"TODO::Senthil","instance":"Click_Box_91","roles":{"click":{"subtype":"button"}}},{"id":"Text_Caption_1156","class":"TODO::Senthil","instance":"Text_Caption_1156","title":"Name(_PRS, ResourceTemplate(){     IO(Decode16, 0x300, 0x3F8, 8, 8),     IRQNoFlags(){3, 4} }) ","roles":{"textData":{}}},{"id":"Green_underline_210","class":"TODO::Senthil","instance":"Green_underline_210","roles":{}},{"id":"What_is_ACPI_1258","class":"TODO::Senthil","instance":"What_is_ACPI_1258","title":"_PRS and _SRS ","roles":{"textData":{}}},{"id":"Slide111260","class":"Normal Slide","instance":"_PRS and _SRS 2","thumbnail":"","children":["si74803","si111722","What_is_ACPI_text_967","Click_Box_91","Text_Caption_1156","What_is_ACPI_1258"],"roles":{"slide":{"durationInFrames":1380},"navigation":{"navid":"Slide111260"}}},{"id":"What_is_ACPI_text_1254","class":"TODO::Senthil","instance":"What_is_ACPI_text_1254","title":"The _PRS for a UART that uses MMIO registers rather than I/O registers can be described as shown here.   This example provides for eight bytes of MMIO that can be located anywhere from 0xC0000000 to 0xC0001FF8, again with QWORD granularity. Also, one interrupt is selectable between IRQ14, and IRQ15, but in this example we are using a shared, active-low, level-sensitive interrupt (PCI semantics).  ","roles":{"textData":{}}},{"id":"Click_Box_121","class":"TODO::Senthil","instance":"Click_Box_121","roles":{"click":{"subtype":"button"}}},{"id":"Text_Caption_1257","class":"TODO::Senthil","instance":"Text_Caption_1257","title":"Name(_PRS, ResourceTemplate(){     Memory32(ReadWrite, 0xC0000000, 0xC0001FF8, 0x08, 0x08),     IRQ(Level, ActiveLow, Shared){14, 15} }) ","roles":{"textData":{}}},{"id":"Green_underline_211","class":"TODO::Senthil","instance":"Green_underline_211","roles":{}},{"id":"What_is_ACPI_1259","class":"TODO::Senthil","instance":"What_is_ACPI_1259","title":"_PRS and _SRS ","roles":{"textData":{}}},{"id":"Slide159835","class":"Normal Slide","instance":"_PRS and _SRS 3","thumbnail":"","children":["si74803","si111722","What_is_ACPI_text_1254","Click_Box_121","Text_Caption_1257","What_is_ACPI_1259"],"roles":{"slide":{"durationInFrames":948},"navigation":{"navid":"Slide159835"}}},{"id":"Click_Box_107","class":"TODO::Senthil","instance":"Click_Box_107","roles":{"click":{"subtype":"button"}}},{"id":"What_is_ACPI_text_1124","class":"TODO::Senthil","instance":"What_is_ACPI_text_1124","title":"Set Resource Settings (_SRS) is a control method that configures the hardware using settings passed in as arguments.   Consider the _PRS example shown here. The _SRS method takes an argument in the form of a buffer matching one of the collections provided by _PRS, which are wrapped in a StartDependentFn block if present. The buffer is a concatenation of the IO and IRQNoFlags Resource Descriptors.   Note: the Resource Descriptors are buffers.   ","roles":{"textData":{}}},{"id":"What_is_ACPI_text_1141","class":"TODO::Senthil","instance":"What_is_ACPI_text_1141","title":"Name(_PRS, ResourceTemplate(){ \tStartDependentFn(0, 2){             // COM1     IO(Decode16, 0x3F8, 0x3F8, 1, 8),     IRQNoFlags(){4}   }, \tStartDependentFn(0, 2){             // COM2     IO(Decode16, 0x2F8, 0x2F8, 1, 8),     IRQNoFlags(){3} \t}, \tStartDependentFn(0, 2){             // COM3     IO(Decode16, 0x3E8, 0x3E8, 1, 8),     IRQNoFlags(){4} \t}, \tStartDependentFn(0, 2){             // COM4     IO(Decode16, 0x2E8, 0x2E8, 1, 8),     IRQNoFlags(){3} \t}, \tEndDependentFn() })  ","roles":{"textData":{}}},{"id":"Text_Caption_1159","class":"TODO::Senthil","instance":"Text_Caption_1159","title":"Method(_SRS, 1, Serialized){ \t// Obtain requested settings \tCreateWordField(Arg0, 2, IOB)\t// IO Base Address \tCreateByteField(Arg0, 9, IRQ)\t// IRQ Vector \t \t// Device- or platform-specific code to apply settings \t// and enable the device \t// ... } ","roles":{"textData":{}}},{"id":"Green_underline_212","class":"TODO::Senthil","instance":"Green_underline_212","roles":{}},{"id":"What_is_ACPI_1260","class":"TODO::Senthil","instance":"What_is_ACPI_1260","title":"_PRS and _SRS ","roles":{"textData":{}}},{"id":"Slide145535","class":"Normal Slide","instance":"_PRS and _SRS 4","thumbnail":"","children":["si74803","si111722","Click_Box_107","What_is_ACPI_text_1124","What_is_ACPI_text_1141","Text_Caption_1159","What_is_ACPI_1260"],"roles":{"slide":{"durationInFrames":867},"navigation":{"navid":"Slide145535"}}},{"id":"Click_Box_100","class":"TODO::Senthil","instance":"Click_Box_100","roles":{"click":{"subtype":"button"}}},{"id":"What_is_ACPI_text_1075","class":"TODO::Senthil","instance":"What_is_ACPI_text_1075","title":"The only difference between IO entries in the _PRS example is that the IO min and max base addresses and the min and max addresses are identical. Therefore, checking only the word at byte 2 is sufficient to determine the requested base IO port address. CreateWordField is used to assign the IOB object to reference the word field starting at byte offset 2 in Arg0.  Since the I/O Port Descriptor is eight bytes long, the IRQ descriptor starts at byte 8 within Arg0. CreateWordField is to assign the IRQ object to reference the word field starting at byte offset 9.   Once the requested resources settings have been applied, _SRS must also ensure that the device is enabled and accessible via the resources assigned, and that _CRS returns the current resource settings. The latter requirement can be fulfilled in the following ways:  _CRS is implemented as a control method, which reads the current configuration from the hardware and populates the resource buffer based on those settings. _CRS is implemented as a control method which returns a named resource buffer. This buffer is updated by _SRS when the configuration is changed. _CRS is implemented as a buffer, which is updated by _SRS when the configuration is changed.  ","roles":{"textData":{}}},{"id":"Text_Caption_1144","class":"TODO::Senthil","instance":"Text_Caption_1144","title":"Method(_SRS, 1, Serialized){ \t// Obtain requested settings \tCreateWordField(Arg0, 2, IOB)\t// IO Base Address \tCreateByteField(Arg0, 9, IRQ)\t// IRQ Vector \t \t// Device- or platform-specific code to apply  \t// settings and enable the device.  \t// ... } ","roles":{"textData":{}}},{"id":"Green_underline_213","class":"TODO::Senthil","instance":"Green_underline_213","roles":{}},{"id":"What_is_ACPI_1261","class":"TODO::Senthil","instance":"What_is_ACPI_1261","title":"_PRS and _SRS ","roles":{"textData":{}}},{"id":"Slide144611","class":"Normal Slide","instance":"_PRS and _SRS 5","thumbnail":"","children":["si74803","si111722","Click_Box_100","What_is_ACPI_text_1075","Text_Caption_1144","What_is_ACPI_1261"],"roles":{"slide":{"durationInFrames":2268},"navigation":{"navid":"Slide144611"}}},{"id":"Click_Box_111","class":"TODO::Senthil","instance":"Click_Box_111","roles":{"click":{"subtype":"button"}}},{"id":"Green_underline_197","class":"TODO::Senthil","instance":"Green_underline_197","roles":{}},{"id":"What_is_ACPI_1146","class":"TODO::Senthil","instance":"What_is_ACPI_1146","title":"Disable (_DIS) ","roles":{"textData":{}}},{"id":"Text_Caption_1147","class":"TODO::Senthil","instance":"Text_Caption_1147","title":"Disable (_DIS) is used  to disable a device and allow resources previously assigned to the device to be reused and allocated to other devices. _SRS must be invoked again to re-enable a device.  ","roles":{"textData":{}}},{"id":"Text_Caption_1148","class":"TODO::Senthil","instance":"Text_Caption_1148","title":"Method (_DIS, 0) {     // Device-specific operations to  \t// disable address decoding and \t// functionality of a device. } ","roles":{"textData":{}}},{"id":"Slide148951","class":"Normal Slide","instance":"_DIS","thumbnail":"","children":["si74803","si111722","Click_Box_111","What_is_ACPI_1146","Text_Caption_1147","Text_Caption_1148"],"roles":{"slide":{"durationInFrames":381},"navigation":{"navid":"Slide148951"}}},{"id":"Green_underline_184","class":"TODO::Senthil","instance":"Green_underline_184","roles":{}},{"id":"What_is_ACPI_1081","class":"TODO::Senthil","instance":"What_is_ACPI_1081","title":"Connectors ","roles":{"textData":{}}},{"id":"Click_Box_101","class":"TODO::Senthil","instance":"Click_Box_101","roles":{"click":{"subtype":"button"}}},{"id":"What_is_ACPI_text_1082","class":"TODO::Senthil","instance":"What_is_ACPI_text_1082","title":"For an electromechanical connector inside a chassis, the Slot User Number (_SUN) may be provided to allow the user to identify where a device is connected. This may include such items as drive bays, PCI or PCIe slots, or battery connectors.  For an exposed connector, the Physical Location of Device (_PLD) describes the physical location and characteristics of the device’s external connection point.   These objects describe properties of the platform.   ","roles":{"textData":{}}},{"id":"Slide144759","class":"Normal Slide","instance":"Connectors","thumbnail":"","children":["si74803","si111722","What_is_ACPI_1081","Click_Box_101","What_is_ACPI_text_1082"],"roles":{"slide":{"durationInFrames":927},"navigation":{"navid":"Slide144759"}}},{"id":"What_is_ACPI_text_1262","class":"TODO::Senthil","instance":"What_is_ACPI_text_1262","title":"A Device-Specific Data (_DSD) object is a Package that conveys information about a Device, or system information that may affect the Device, to a driver for the device via OSP). _DSD must be implemented as a Package, never as a Method returning a Package.  The contents of the _DSD package must be static for the duration of an OS boot instance.   The _DSD package includes one or more Device Data Descriptors, each comprised of two elements: a UUID and another Package. The UUID for the Descriptor corresponds with a format for the succeeding package. There are two UUIDs commonly in use, and documentation for both is available at the ACPI Support Documents page at https://www.uefi.org/acpi.   The first commonly used UUID is the Device Properties UUID for _DSD (daffd814-6eba-4d8c-8a91-bc9bbf4aa301). It is used to describe a set of device properties, each in a key/value pair. The key is a String, and the value type depends on the key, as defined by the Device containing the _DSD object.  The second common UUID is the Hierarchical Data Extension for _DSD (dbb8e3e6-5886-4ba6-8795-1319f52a966b). It is used to describe a set of subproperties, each as a key/value pair. The subproperty key is a string, and the value is either a String encoding the name of an object or a reference to an object Package containing additional data following the _DSD format. Generally each “sub-package” contains Device Data Descriptors using the Device Properties or Hierarchical Data Extension properties or both.   See the next page for a code example of the above.   ","roles":{"textData":{}}},{"id":"Green_underline_214","class":"TODO::Senthil","instance":"Green_underline_214","roles":{}},{"id":"What_is_ACPI_1263","class":"TODO::Senthil","instance":"What_is_ACPI_1263","title":"Device-Specific Data: _DSD ","roles":{"textData":{}}},{"id":"Click_Box_122","class":"TODO::Senthil","instance":"Click_Box_122","roles":{"click":{"subtype":"button"}}},{"id":"Slide159977","class":"Normal Slide","instance":"_DSD","thumbnail":"","children":["si74803","si111722","What_is_ACPI_text_1262","What_is_ACPI_1263","Click_Box_122"],"roles":{"slide":{"durationInFrames":2769},"navigation":{"navid":"Slide159977"}}},{"id":"Green_underline_159","class":"TODO::Senthil","instance":"Green_underline_159","roles":{}},{"id":"What_is_ACPI_982","class":"TODO::Senthil","instance":"What_is_ACPI_982","title":"_DSD Example ","roles":{"textData":{}}},{"id":"Click_Box_95","class":"TODO::Senthil","instance":"Click_Box_95","roles":{"click":{"subtype":"button"}}},{"id":"Text_Caption_983","class":"TODO::Senthil","instance":"Text_Caption_983","title":"Device(SWC0) {      Name(_HID, \"VEND0000\")    // sample Vendor ID - do not use      Name(_DSD, Package() {          ToUUID(\"daffd814-6eba-4d8c-8a91-bc9bbf4aa301\"),          Package () {              Package (2) {...}, // Property 1              ...              Package (2) {...}, // Property n          },          ToUUID(\"dbb8e3e6-5886-4ba6-8795-1319f52a966b\"),          Package () {              Package (2) {\"Alice\", \"DP0P\"} // String example             Package (2) {\"Frank\", DPNP}   // Object reference example         }      })        Name(DP0P, Package(){ // Data-only subnode of SWC0          ToUUID(\"daffd814-6eba-4d8c-8a91-bc9bbf4aa301\"),          Package () {              Package (2) {...}, // Property 1              ...              Package (2) {...} // Property n          },          ToUUID(\"dbb8e3e6-5886-4ba6-8795-1319f52a966b\"),          Package () {              Package (2) {\"common-properties\", ^COMN}         }      })       Name(DPNP, Package(){ // Data-only subnode of SWC0          ToUUID(\"daffd814-6eba-4d8c-8a91-bc9bbf4aa301\"),          Package () {              Package (2) {...}, // Property 1              Package (2) {...} // Property 2          },             ","roles":{"textData":{}}},{"id":"Text_Caption_984","class":"TODO::Senthil","instance":"Text_Caption_984","title":"     ToUUID(\"dbb8e3e6-5886-4ba6-8795-1319f52a966b\"),          Package () {              Package (2) {\"child-of-Frank\", \"DP00\"},             Package (2) {\"common-properties\", ^COMN}         }      })   Name(DP00, Package(){ // Data-only subnode of DPNP          ToUUID(\"daffd814-6eba-4d8c-8a91-bc9bbf4aa301\"),          Package () {              Package (2) {...}, // Property 1              ...              Package (2) {...} // Property n          },          ToUUID(\"dbb8e3e6-5886-4ba6-8795-1319f52a966b\"),          Package () {              Package (2) {\"common-properties\", ^COMN}         }      })        Device (SWD0) {          Name(_ADR, ...)          Name(_DSD, Package() {              ToUUID(\"daffd814-6eba-4d8c-8a91-bc9bbf4aa301\"),              Package () {                  Package (2) {...}, // Property 1                  ...                  Package (2) {...} // Property n              }          })      } // End SWD0       Name(COMN, Package() { // Common properties         ToUUID(\"daffd814-6eba-4d8c-8a91-bc9bbf4aa301\"),          Package () {              Package (2) {...}, // Property 1              ...              Package (2) {...} // Property n           } } // End SWC0   ","roles":{"textData":{}}},{"id":"Slide111547","class":"Normal Slide","instance":"_DSD code example","thumbnail":"","children":["si74803","si111722","What_is_ACPI_982","Click_Box_95","Text_Caption_983","Text_Caption_984"],"roles":{"slide":{"durationInFrames":1611},"navigation":{"navid":"Slide111547"}}},{"id":"What_is_ACPI_text_974","class":"TODO::Senthil","instance":"What_is_ACPI_text_974","title":"A Device Specific Method (_DSM) provides one or more sets of functions that support a device- or class-specific feature or set of features.   _DSM takes 4 arguments:       Arg0 – A Buffer containing a UUID     Arg1 – An Integer containing the Revision ID     Arg2 – An Integer containing the Function Index     Arg3 – A Package that contains function-specific arguments  Each set of functions must be defined using a UUID.  The UUID is passed in via Arg0 and is used to designate the _DSM function set. The revision ID of the function set is passed in via Arg1. The function number or index within a function set is passed in via Arg2. Function 0 for each _DSM function set returns a buffer, which is a bitmap of supported functions within the function set designated by the UUID.   If a _DSM implementation does not support the set defined by the UUID, function 0 will return a buffer with a single byte value of 0. Otherwise, for each bit set in the buffer, the _DSM implementation supports the corresponding function. So, if function 0 returns Buffer(){3, 9} then the _DSM for that UUID and revision supports functions 0, 1, 8, and 11 (0x0b).   The _DSM function set definition prescribes the individual arguments (passed in as a Package via Arg3) and return values for each function within the set.   The ACPI specification defines a Device-Specific Method (_DSM) function set for an NVDIMM Root Device. Other specifications may define additional _DSM property sets. For example, the PCI Firmware Specification (www.pcisig.org) defines a _DSM function set for some types of PCI and PCI Express devices. And the MIPI DisCo Specification for NIDnT defines a _DSM function set for a debug interface.          ","roles":{"textData":{}}},{"id":"Green_underline_157","class":"TODO::Senthil","instance":"Green_underline_157","roles":{}},{"id":"What_is_ACPI_975","class":"TODO::Senthil","instance":"What_is_ACPI_975","title":"Device Specific Method (_DSM) ","roles":{"textData":{}}},{"id":"Click_Box_93","class":"TODO::Senthil","instance":"Click_Box_93","roles":{"click":{"subtype":"button"}}},{"id":"Text_Caption_976","class":"TODO::Senthil","instance":"Text_Caption_976","title":"See the next page for a _DSM code example.  ","roles":{"textData":{}}},{"id":"Slide111422","class":"Normal Slide","instance":"Device Specific Method (_DSM)","thumbnail":"","children":["si74803","si111722","What_is_ACPI_text_974","What_is_ACPI_975","Click_Box_93","Text_Caption_976"],"roles":{"slide":{"durationInFrames":3600},"navigation":{"navid":"Slide111422"}}},{"id":"Click_Box_114","class":"TODO::Senthil","instance":"Click_Box_114","roles":{"click":{"subtype":"button"}}},{"id":"Green_underline_200","class":"TODO::Senthil","instance":"Green_underline_200","roles":{}},{"id":"What_is_ACPI_1164","class":"TODO::Senthil","instance":"What_is_ACPI_1164","title":"_DSM Example ","roles":{"textData":{}}},{"id":"Text_Caption_1165","class":"TODO::Senthil","instance":"Text_Caption_1165","title":"// _DSM – Device Specific Method // // Arg0: UUID  Unique function identifier // Arg1:  Integer  Revision Level // Arg2:  Integer  Function Index (0 = Return Supported Functions) // Arg3:  Package  Parameters Function(_DSM,{IntObj,BuffObj},{BuffObj, IntObj, IntObj, PkgObj}) {  //  // Switch based on which unique function identifier was passed in  //  switch(Arg0)  {   //   // First function identifier   //   case(ToUUID(“893f00a6-660c-494e-bcfd-3043f4fb67c0”))   {    switch(Arg2)    {     //     // Function 0: Return supported functions, based on revision     //     case(0)     {      switch(Arg1)         {       // revision 0: functions 1-4 are supported       case(0) {return (Buffer() {0x1F})}        // revision 1: functions 1-5 are supported       case(1) {return (Buffer() {0x3F})}       }      // revision 2+: functions 1-7 are supported      return (Buffer() {0xFF})       }     //     // Function 1:     //     case(1)      {       … function 1 code …      Return(Zero)     }   ","roles":{"textData":{}}},{"id":"Text_Caption_1166","class":"TODO::Senthil","instance":"Text_Caption_1166","title":"    //     // Function 2:     //     case(2)      {       … function 2 code …      Return(Buffer(){0x00})     }     case(3) { … function 3 code …}     case(4) { … function 4 code …}     case(5) { if (LLess(Arg1,1) BreakPoint; … function 5 code … }     case(6) { if (LLess(Arg1,2) BreakPoint; … function 6 code … )     case(7) { if (LLess(Arg1,3) BreakPoint; … function 7 code … )     default {BreakPoint }    }   }   //   // Second function identifier   //   case(ToUUID(“107ededd-d381-4fd7-8da9-08e9a6c79644”))   {    //    // Function 0: Return supported functions (there is only one revision)    //    if (LEqual(Arg2,Zero))     return (Buffer() {0x3}) // only one function supported    //    // Function 1    //    if (LEqual(Arg2,One))    {      … function 1 code …      Return(Unicode(“text”))    }    //    // Function 2+: Runtime Error    //    else         BreakPoint;   }  }  //  // If not one of the UUIDs we recognize, then return a buffer  // with bit 0 set to 0 indicating no functions supported.  //  return(Buffer(){0}) } ","roles":{"textData":{}}},{"id":"Slide152044","class":"Normal Slide","instance":"_DSM Example","thumbnail":"","children":["si74803","si111722","Click_Box_114","What_is_ACPI_1164","Text_Caption_1165","Text_Caption_1166"],"roles":{"slide":{"durationInFrames":2799},"navigation":{"navid":"Slide152044"}}},{"id":"Text_Caption_722","class":"TODO::Senthil","instance":"Text_Caption_722","title":"Module Completion  ","roles":{"textData":{}}},{"id":"Text_Caption_723","class":"TODO::Senthil","instance":"Text_Caption_723","title":"Congratulations! You’ve completed this module. Close your browser to exit. ","roles":{"textData":{}}},{"id":"Image_198","class":"TODO::Senthil","instance":"Image_198","roles":{}},{"id":"Text_Caption_724","class":"TODO::Senthil","instance":"Text_Caption_724","title":"Module Completion  ","roles":{"textData":{}}},{"id":"Button_344","class":"TODO::Senthil","instance":"Button_344","roles":{"click":{"subtype":"button"}}},{"id":"si78825","class":"TODO::Senthil","roles":{"click":{"subtype":"button"}}},{"id":"si78839","class":"TODO::Senthil","roles":{"click":{"subtype":"button"}}},{"id":"Click_Box_68","class":"TODO::Senthil","instance":"Click_Box_68","roles":{"click":{"subtype":"button"}}},{"id":"Text_Caption_985","class":"TODO::Senthil","instance":"Text_Caption_985","title":"$$cpInfoCurrentSlide$$ ","roles":{"textData":{}}},{"id":"Slide78225","class":"Normal Slide","instance":"Module Completion","thumbnail":"","children":["si74803","si111722","Text_Caption_722","Text_Caption_723","Image_198","Text_Caption_724","Button_344","si78825","si78839","Click_Box_68","Text_Caption_985"],"roles":{"slide":{"durationInFrames":234},"navigation":{"navid":"Slide78225"}}},{"id":"Pool492","class":"pool","roles":{"pool":{"id":492,"name":"Pool1","questions":[]}}},{"id":"Describing a Device","class":"project","title":"Describing a Device","children":["Slide17873","Slide150687","Slide122516","Slide145072","Slide145150","Slide154136","Slide85337","Slide151947","Slide154767","Slide155056","Slide155345","Slide155634","Slide155923","Slide136767","Slide137036","Slide137305","Slide137574","Slide137843","Slide146690","Slide144830","Slide109240","Slide109344","Slide111195","Slide109552","Slide110245","Slide147907","Slide147965","Slide148021","Slide109188","Slide111260","Slide159835","Slide145535","Slide144611","Slide148951","Slide144759","Slide159977","Slide111547","Slide111422","Slide152044","Slide78225"],"roles":{"quiz":{"id":450,"branched":false,"submitAll":false,"review":false,"questions":[],"minScore":0,"maxScore":0,"passScore":10}}}],"contentSettings":{"global":{"branchAware":false},"toc":{"navigationEnabled":true,"navigateVisitedSlides":false,"collapseAll":false,"showTopicDuration":false,"statusFlag":true,"selfPaced":true,"showSearch":false,"enabled":true},"playbar":{"enabled":true,"cc":false,"playPause":true,"back":true,"forward":true,"rewind":false,"close":false,"mute":true,"progressBar":true}},"contentReporting":{"CCCriteria":"launch_content","SCCriteria":"launch_content","exitNormalIfCompleted":false},"toc":[{"id":"Slide17873","title":"Title slide","visible":false},{"id":"Slide150687","title":"Title slide","visible":false},{"id":"Slide122516","title":"Introduction","visible":true},{"id":"Slide145072","title":"Describing a Device","visible":true},{"id":"Slide145150","title":"Full Device Objects","visible":true},{"id":"Slide154136","title":"Augmented Device Objects","visible":true},{"id":"Slide85337","title":"Device Keyword","visible":true},{"id":"Slide151947","title":"Device Example","visible":true},{"id":"Slide154767","title":"Device Example 2","visible":false},{"id":"Slide155056","title":"Device Example 3","visible":false},{"id":"Slide155345","title":"Device Example 4","visible":false},{"id":"Slide155634","title":"Device Example 5","visible":false},{"id":"Slide155923","title":"Device Example 6","visible":false},{"id":"Slide136767","title":"Identification Objects","visible":true},{"id":"Slide137036","title":"Identification Objects 2","visible":false},{"id":"Slide137305","title":"Identification Objects 3","visible":false},{"id":"Slide137574","title":"Identification Objects 4","visible":false},{"id":"Slide137843","title":"Identification Objects 5","visible":false},{"id":"Slide146690","title":"Identification Objects 6","visible":false},{"id":"Slide144830","title":"Status (_STA)","visible":true},{"id":"Slide109240","title":"Hardware Resources","visible":true},{"id":"Slide109344","title":"Device Initialization","visible":true},{"id":"Slide111195","title":"Resource Descriptor Data Types","visible":true},{"id":"Slide109552","title":"IO Macro","visible":true},{"id":"Slide110245","title":"Irq and IrqNoFlags","visible":true},{"id":"Slide147907","title":"Buffers and the ResourceTemplate","visible":true},{"id":"Slide147965","title":"Buffers and the ResourceTemplate 2","visible":false},{"id":"Slide148021","title":"Buffers and the ResourceTemplate 3","visible":false},{"id":"Slide109188","title":"_PRS and _SRS","visible":true},{"id":"Slide111260","title":"_PRS and _SRS 2","visible":false},{"id":"Slide159835","title":"_PRS and _SRS 3","visible":false},{"id":"Slide145535","title":"_PRS and _SRS 4","visible":false},{"id":"Slide144611","title":"_PRS and _SRS 5","visible":false},{"id":"Slide148951","title":"_DIS","visible":true},{"id":"Slide144759","title":"Connectors","visible":true},{"id":"Slide159977","title":"_DSD","visible":true},{"id":"Slide111547","title":"_DSD code example","visible":false},{"id":"Slide111422","title":"Device Specific Method (_DSM)","visible":true},{"id":"Slide152044","title":"_DSM Example","visible":false},{"id":"Slide78225","title":"Module Completion","visible":true}]}